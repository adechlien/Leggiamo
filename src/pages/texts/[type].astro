---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
const { type } = Astro.params;

export function getStaticPaths() {
  return [
    { params: { type: 'cuentos-cortos' } },
    { params: { type: 'cuentos-largos' } },
    { params: { type: 'meditaciones' } },
    { params: { type: 'poemas' } },
    { params: { type: 'imparando-italiano' } }
  ];
}

let typeTitle = type;
let typeUrl = "";
let typeDescription = '';
let typeDescriptionEs = '';
if (typeTitle === "poemas"){
  typeUrl = "Poema";
  typeTitle = "Poemas";
} else if (typeTitle === "cuentos-cortos"){
  typeUrl = "Cuento corto";
  typeTitle = "Cuentos cortos";
} else if (typeTitle === "cuentos-largos"){
  typeUrl = "Cuento largo";
  typeTitle = "Cuentos largos";
} else if (typeTitle === "meditaciones"){
  typeUrl = "MeditaciÃ³n";
  typeTitle = "Meditaciones";
} else if (typeTitle === "imparando-italiano"){
  typeUrl = "Imparando Italiano";
  typeTitle = "Imparando Italiano";
  typeDescription = "ðŸ‡®ðŸ‡¹ Nessuno di questi testi Ã¨ stato scritto per me. DarÃ² solo la mia opinione su diversi temi che leggerÃ² per migliorare il mio livello di italiano. Alla fine di ogni testo, scriverÃ² alcune cose interessanti che ho tratto da essi.";
  typeDescriptionEs = "ðŸ‡ªðŸ‡¸ Ninguno de estos textos fue escrito por mÃ­. Solo darÃ© mi opiniÃ³n sobre diferentes temas que leerÃ© para mejorar mi nivel de italiano. Al final de cada texto, escribirÃ© algunas cosas interesantes que he sacado de ellos.";
}

let posts = (await getCollection('texts'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .filter((post) => post.data.type === typeUrl);
---

<Layout title={typeTitle}>
  <main class="w-full dark:text-dark-text text-light-text mt-8 mb-auto mx-auto">
    <section class="flex flex-col items-center px-4">
      <h1 class="text-light-header dark:text-dark-text text-2xl mb-4 font-medium">{typeTitle}</h1>
      <p class="text-light-header dark:text-dark-text text-md mb-4">{typeDescription}</p>
      <p class="text-light-header dark:text-dark-text text-md mb-4">{typeDescriptionEs}</p>
      <ul class="flex flex-col sm:grid sm:grid-cols-3 items-start w-full gap-4 sm:gap-y-12 text-center justify-center">
        {
          posts.map((post) => (
            <li class="my-4 sm:my-0 w-full text-center">
              <a href={`/texts/${post.slug}/`} class="text-sm flex flex-col gap-1 items-center">
                <p class="date"><FormattedDate date={post.data.pubDate} /></p>
                <img class="rounded-full w-32 sm:w-28" src={post.data.heroImage} alt="" />
                <h4 class="title text-center text-lg sm:w-full truncate">{post.data.title}</h4>
              </a>
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</Layout>
