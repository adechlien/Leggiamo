---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const posts = await getCollection("texts");
  return posts.map((post: any) => ({
    params: { type: post.data.type, slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<"texts">;

const post = Astro.props;
const {
  title,
  type,
  heroImage,
  heroSmImage,
  pubDate,
  editDate,
  edition,
  related = [],
  color,
} = post.data;
const { Content } = await post.render();

let typeTitle = "";
if (type === "lagrimas") {
  typeTitle = "Lágrimas de Siddartha";
} else if (type === "colores") {
  typeTitle = "En las luces de colores";
} else if (type === "still") {
  typeTitle = "Still Prefer Sentir";
} else if (type === "placebo") {
  typeTitle = "Placebo Onírico";
} else {
  typeTitle = type;
}

// Obtener colección de textos
const allPosts = await getCollection("texts");

// Filtrar los posts relacionados
const relatedPosts = related
  .map((slug: string) => allPosts.find((post: any) => post.slug === slug))
  .filter(Boolean); // Elimina los valores `undefined`
---

<Layout title={title} bg={color}>
  <article
    class="flex flex-col justify-center w-full"
    style={`background-color: ${color}`}
  >
    <!-- Cover -->
    <div class="relative">
      <!-- Image -->
      <img class="w-screen sm:hidden flex" src={heroImage} alt="" />
      <img class="w-screen hidden sm:flex" src={heroSmImage} alt="" />
      <div class="w-full absolute bottom-0 h-72 sm:h-32" style={color ? `background: linear-gradient(to bottom, ${color}00, ${color}FF);`: ""}>
        <!-- Gradient -->
      </div>
    </div>

    <!-- Title -->
    <div class="flex flex-col pb-2 mt-12 border-b-2 border-white/50 mx-4 sm:w-[500px] sm:mx-auto">
      <h3 class="text-xl capitalize">
        {typeTitle}
      </h3>
      <h1 class="text-4xl font-bold mb-1">
        {title}
      </h1>
      <div class="bg-black/25 backdrop-blur-md border border-white/20 rounded-lg flex justify-between self-start text-base px-2">
        <div class="flex items-center gap-1">
            <i class="ti ti-clock"></i>
            <FormattedDate date={pubDate} format="long" />
        </div>
      </div>
    </div>

    <!-- Content -->
    <div lang="es" class="article-body m-8 font-besley text-base sm:w-[480px] sm:mx-auto text-justify hyphens-auto">
      <Content />
    </div>

    <!-- Related Posts -->
    <div class="flex flex-col gap-4 pt-4 border-t-2 border-white/50 mx-4 sm:w-[500px] sm:mx-auto">
      <h2 class="bg-black/25 backdrop-blur-md border border-white/20 rounded-xl text-2xl font-bold text-left px-2 py-1 pb-0 font-bebas">Textos relacionados</h2>
      <ul class="flex flex-col gap-6 mx-2">
        {
          relatedPosts.length > 0 ? (
            relatedPosts.map((post: any) => (
              <li class="w-full text-center">
                <a href={`/${type}/${post.slug}/`} class="">
                  <div class="relative overflow-hidden rounded-xl aspect-[3/1] border border-white/10">
                      <img src={post.data.heroSmImage} alt={post.data.title}
                      class="absolute inset-0 h-full w-full object-cover pointer-events-none select-none"
                      loading="lazy"/>

                    <div class="flex flex-col justify-between h-full w-full p-3">
                      <p class="bg-black/25 backdrop-blur-md border border-white/20 text-right self-end text-white text-sm p-1 px-2 rounded-lg font-bold">
                        <FormattedDate date={post.data.pubDate} format="short"/>
                      </p>

                      <h2 class="bg-black/25 backdrop-blur-md border border-white/20 text-white font-bebas text-start p-1 px-2 pb-0 text-lg rounded-lg">
                        {post.data.title}
                      </h2>
                    </div>
                  </div>
                </a>
              </li>
            ))
          ) : (
            <p class="font-normal">No hay textos relacionados.</p>
          )
        }
      </ul>
    </div>
  </article>
</Layout>

<style is:global>
/* aplica a los p que vienen de <Content /> */
.article-body p{
  text-align: justify;
  hyphens: auto;
  -webkit-hyphens: auto;   /* Safari */
  text-wrap: pretty;        /* opcional: mejor cortes */
}

/* Fallback para Safari: justifica la última línea también */
.article-body p::after{
  content: "";
  display: inline-block;
  width: 100%;
}

/* Si el navegador soporta text-align-last, úsalo y quita el fallback */
@supports (text-align-last: justify){
  .article-body p::after{ content: none; }
}
</style>
